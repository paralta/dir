# Copyright AGNTCY Contributors (https://github.com/agntcy)
# SPDX-License-Identifier: Apache-2.0

name: Dir - Demo

description: |
  This workflow demonstrates how to use the Dir CLI with a Kind cluster and Helm chart.
  It can be run in either local mode or network mode.
  It includes steps for building, pushing, publishing, listing and pulling agents.

on:
  workflow_dispatch:

permissions:
  id-token: write   # Required for OIDC token generation
  contents: read    # Required for repository access

jobs:
  sign-and-verify-with-oidc:
      # This job demonstrates how to sign and verify a record using OIDC tokens.
      # It requires the `id-token` permission to generate OIDC tokens.
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Taskfile
        shell: bash
        run: sh -c "$(curl --location https://taskfile.dev/install.sh)" -- -d -b ~/.local/bin

      - name: Compile CLI
        run: |
          echo "Compiling Dir CLI"
          task cli:compile

      - name: Install Cosign
        uses: sigstore/cosign-installer@v3.8.2

      - name: Run build command
        run: |
          echo "Running dir build command"
          bin/dirctl build . > agent.json
          echo "Built agent.json:"
          cat agent.json

      - name: Get Github OIDC token
        id: oidc-token
        run: |
          OIDC_TOKEN=$(curl -s -H "Authorization: bearer $ACTIONS_ID_TOKEN_REQUEST_TOKEN" \
            "$ACTIONS_ID_TOKEN_REQUEST_URL&audience=sigstore" | jq -r '.value')
          echo "::add-mask::$OIDC_TOKEN"
          echo "token=$OIDC_TOKEN" >> $GITHUB_OUTPUT

      - name: Run sign command
        run: |
          echo "Running dir sign command"
          bin/dirctl sign agent.json \
            --oidc-token ${{ steps.oidc-token.outputs.token }} \
            --oidc-provider-url "https://token.actions.githubusercontent.com" \
            --oidc-client-id "https://github.com/${{ github.repository }}/.github/workflows/demo.yaml@${{ github.ref }}" \
            --stdin > signed.model.json
          echo "Signed agent.json to signed.model.json"
          cat signed.model.json
          mv signed.model.json agent.json

      - name: Run verify command
        run: |
          echo "Running dir verify command"
          bin/dirctl verify agent.json \
            --oidc-issuer "https://token.actions.githubusercontent.com" \
            --oidc-identity "https://github.com/${{ github.repository }}/.github/workflows/demo.yaml@${{ github.ref }}"

  sign-and-verify-with-key:
      # This job demonstrates how to sign and verify a record using Cosign keys.
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Taskfile
        shell: bash
        run: sh -c "$(curl --location https://taskfile.dev/install.sh)" -- -d -b ~/.local/bin

      - name: Compile CLI
        run: |
          echo "Compiling Dir CLI"
          task cli:compile

      - name: Install Cosign
        uses: sigstore/cosign-installer@v3.8.2

      - name: Generate Cosign keys
        run: |
          echo "Generating Cosign keys"
          cosign generate-key-pair
          echo "Cosign keys generated successfully"

      - name: Run build command
        run: |
          echo "Running dir build command"
          bin/dirctl build e2e/testdata > agent.json
          echo "Built agent.json:"
          cat agent.json

      - name: Run sign command
        run: |
          echo "Running dir sign command"
          bin/dirctl sign agent.json --key cosign.key --stdin > signed.model.json
          echo "Signed agent.json:"
          cat signed.model.json
          mv signed.model.json agent.json

      - name: Run verify command
        run: |
          echo "Running dir verify command"
          bin/dirctl verify agent.json --key cosign.pub